openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api-schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api-schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/beneficiary/:
    get:
      operationId: api_beneficiary_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBeneficiaryList'
          description: ''
    post:
      operationId: api_beneficiary_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beneficiary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Beneficiary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Beneficiary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
  /api/beneficiary/{id}/:
    get:
      operationId: api_beneficiary_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this beneficiary.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
    put:
      operationId: api_beneficiary_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this beneficiary.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beneficiary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Beneficiary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Beneficiary'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
    patch:
      operationId: api_beneficiary_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this beneficiary.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBeneficiary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBeneficiary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBeneficiary'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beneficiary'
          description: ''
    delete:
      operationId: api_beneficiary_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this beneficiary.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/contract/:
    get:
      operationId: api_contract_list
      parameters:
      - in: query
        name: beneficiary
        schema:
          type: integer
      - in: query
        name: beneficiary__in
        schema:
          type: array
          items:
            type: integer
        description: Les valeurs multiples doivent être séparées par des virgules.
        explode: false
        style: form
      - in: query
        name: end_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: end_date__lte
        schema:
          type: string
          format: date
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: referent
        schema:
          type: integer
      - in: query
        name: referent__in
        schema:
          type: array
          items:
            type: integer
        description: Les valeurs multiples doivent être séparées par des virgules.
        explode: false
        style: form
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date__gte
        schema:
          type: string
          format: date
      - in: query
        name: start_date__lte
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - over
          - payed
          - pending
          - waiting
        description: |-
          * `waiting` - En attente d'EDL
          * `pending` - En cours
          * `over` - Clôturé
          * `payed` - Payé
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Les valeurs multiples doivent être séparées par des virgules.
        explode: false
        style: form
      - in: query
        name: vehicle
        schema:
          type: integer
      - in: query
        name: vehicle__in
        schema:
          type: array
          items:
            type: integer
        description: Les valeurs multiples doivent être séparées par des virgules.
        explode: false
        style: form
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContractList'
          description: ''
    post:
      operationId: api_contract_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contract'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
  /api/contract/{id}/:
    get:
      operationId: api_contract_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
    put:
      operationId: api_contract_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contract'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
    patch:
      operationId: api_contract_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContract'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
    delete:
      operationId: api_contract_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/contract/{id}/end/:
    get:
      operationId: api_contract_end_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndContract'
          description: ''
    patch:
      operationId: api_contract_end_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEndContract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEndContract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEndContract'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndContract'
          description: ''
  /api/contract/{id}/get_bill_pdf/:
    get:
      operationId: api_contract_get_bill_pdf_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
  /api/contract/{id}/get_contract_pdf/:
    get:
      operationId: api_contract_get_contract_pdf_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
  /api/contract/{id}/payed/:
    post:
      operationId: api_contract_payed_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contract.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contract'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contract'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/:
    get:
      operationId: api_user_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: api_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/vehicle/:
    get:
      operationId: api_vehicle_list
      parameters:
      - in: query
        name: fleet_id
        schema:
          type: integer
      - in: query
        name: fleet_id__in
        schema:
          type: array
          items:
            type: integer
        description: Les valeurs multiples doivent être séparées par des virgules.
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVehicleList'
          description: ''
    post:
      operationId: api_vehicle_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /api/vehicle/{id}/:
    get:
      operationId: api_vehicle_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    put:
      operationId: api_vehicle_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    patch:
      operationId: api_vehicle_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    delete:
      operationId: api_vehicle_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/whoami/:
    get:
      operationId: api_whoami_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Beneficiary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 100
        address:
          type: string
          maxLength: 100
        address_complement:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        license_number:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 100
      required:
      - address
      - city
      - email
      - first_name
      - id
      - last_name
      - license_number
      - phone
      - postal_code
    BlankEnum:
      enum:
      - ''
    Contract:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_kilometer:
          type: integer
          readOnly: true
        end_kilometer:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        comment:
          type: string
          nullable: true
        reason:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_kilometer:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        deposit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        discount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        vehicle:
          type: integer
        beneficiary:
          type: integer
        referent:
          type: integer
      required:
      - beneficiary
      - created_at
      - created_by
      - deposit
      - end_date
      - end_kilometer
      - id
      - price
      - referent
      - start_date
      - start_kilometer
      - vehicle
    ContractStatusEnum:
      enum:
      - waiting
      - pending
      - over
      - payed
      type: string
      description: |-
        * `waiting` - En attente d'EDL
        * `pending` - En cours
        * `over` - Clôturé
        * `payed` - Payé
    EndContract:
      type: object
      properties:
        price:
          type: integer
        deposit:
          type: integer
        discount:
          type: integer
        end_kilometer:
          type: integer
        start_kilometer:
          type: integer
          readOnly: true
        max_kilometer:
          type: integer
          readOnly: true
        vehicle_kilometer:
          type: integer
          readOnly: true
      required:
      - deposit
      - discount
      - end_kilometer
      - max_kilometer
      - price
      - start_kilometer
      - vehicle_kilometer
    FuelTypeEnum:
      enum:
      - essence
      - diesel
      - electrique
      type: string
      description: |-
        * `essence` - Essence
        * `diesel` - Diesel
        * `electrique` - Electrique
    NullEnum:
      enum:
      - null
    PaginatedBeneficiaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Beneficiary'
    PaginatedContractList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVehicleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
    PatchedBeneficiary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 100
        address:
          type: string
          maxLength: 100
        address_complement:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        license_number:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 100
    PatchedContract:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_kilometer:
          type: integer
          readOnly: true
        end_kilometer:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        comment:
          type: string
          nullable: true
        reason:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_kilometer:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        deposit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        discount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        vehicle:
          type: integer
        beneficiary:
          type: integer
        referent:
          type: integer
    PatchedEndContract:
      type: object
      properties:
        price:
          type: integer
        deposit:
          type: integer
        discount:
          type: integer
        end_kilometer:
          type: integer
        start_kilometer:
          type: integer
          readOnly: true
        max_kilometer:
          type: integer
          readOnly: true
        vehicle_kilometer:
          type: integer
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 254
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
    PatchedVehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        photo:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/TypeEnum'
        transmission:
          $ref: '#/components/schemas/TransmissionEnum'
        fuel_type:
          $ref: '#/components/schemas/FuelTypeEnum'
        brand:
          type: string
          maxLength: 50
        modele:
          type: string
          maxLength: 50
        year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        imat:
          type: string
          maxLength: 9
        fleet_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        kilometer:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/VehicleStatusEnum'
    ReasonEnum:
      enum:
      - cdd
      - cdi
      - formation
      - interim
      - aided_contract
      - job_seeking
      - part_time
      type: string
      description: |-
        * `cdd` - CDD
        * `cdi` - CDI
        * `formation` - Formation
        * `interim` - Intérim
        * `aided_contract` - Contrat aidé
        * `job_seeking` - Recherche d’emploi
        * `part_time` - Alternance
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TransmissionEnum:
      enum:
      - manuelle
      - automatique
      type: string
      description: |-
        * `manuelle` - Manuelle
        * `automatique` - Automatique
    TypeEnum:
      enum:
      - voiture
      - scouter
      type: string
      description: |-
        * `voiture` - Voiture
        * `scouter` - Scouter
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 254
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - email
      - id
      - username
    Vehicle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        photo:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/TypeEnum'
        transmission:
          $ref: '#/components/schemas/TransmissionEnum'
        fuel_type:
          $ref: '#/components/schemas/FuelTypeEnum'
        brand:
          type: string
          maxLength: 50
        modele:
          type: string
          maxLength: 50
        year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        imat:
          type: string
          maxLength: 9
        fleet_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        kilometer:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/VehicleStatusEnum'
      required:
      - brand
      - fleet_id
      - id
      - imat
      - kilometer
      - modele
      - year
    VehicleStatusEnum:
      enum:
      - available
      - rented
      - maintenance
      type: string
      description: |-
        * `available` - Disponible
        * `rented` - A dispo
        * `maintenance` - En maintenance
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
