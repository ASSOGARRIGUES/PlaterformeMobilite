# Generated by Django 5.0.3 on 2024-05-06 21:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('address_complement', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('license_number', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='', upload_to='vehicles/')),
                ('type', models.CharField(choices=[('voiture', 'Voiture'), ('scouter', 'Scouter')], default='voiture', max_length=20)),
                ('transmission', models.CharField(choices=[('manuelle', 'Manuelle'), ('automatique', 'Automatique')], default='manuelle', max_length=20)),
                ('fuel_type', models.CharField(choices=[('essence', 'Essence'), ('diesel', 'Diesel'), ('electrique', 'Electrique')], default='essence', max_length=20)),
                ('brand', models.CharField(max_length=50)),
                ('modele', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('imat', models.CharField(max_length=9)),
                ('fleet_id', models.IntegerField(unique=True)),
                ('kilometer', models.IntegerField()),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('rented', 'A dispo'), ('maintenance', 'En maintenance')], default='available', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('waiting', "En attente d'EDL"), ('pending', 'En cours'), ('over', 'Clôturé'), ('payed', 'Payé')], default='waiting', max_length=100)),
                ('comment', models.TextField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, choices=[('cdd', 'CDD'), ('cdi', 'CDI'), ('formation', 'Formation'), ('interim', 'Intérim'), ('aided_contract', 'Contrat aidé'), ('job_seeking', 'Recherche d’emploi'), ('part_time', 'Alternance')], null=True)),
                ('max_kilometer', models.IntegerField(default=None, null=True)),
                ('price', models.IntegerField()),
                ('deposit', models.IntegerField()),
                ('discount', models.IntegerField(default=0)),
                ('start_kilometer', models.IntegerField()),
                ('end_kilometer', models.IntegerField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.beneficiary')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts_created_by', to=settings.AUTH_USER_MODEL)),
                ('referent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts_referent', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vehicle')),
            ],
        ),
    ]
